<?php

namespace Application\Repositories;

use Doctrine\ORM\EntityRepository;
use Application\Entity\Calls as CallsEntity;

/**
 * Calls
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class Calls extends EntityRepository
{
    /**
     * @param int $id
     *
     * @return \ArrayObject
     */
    public function getCallsArrayObjectById($id)
    {
        $result = new \ArrayObject();

        /**
         * @var $call CallsEntity
         */
        $call = $this->findOneById(
            array('id' => $id)
        );

        if (!is_null($call)) {
            $result['subject']    = $call->getSubject();
            $result['content']    = $call->getContent();
            $result['customerId'] = $call->getCustomerId();
            $result['callId']     = $call->getId();
        }

        return $result;
    }

    /**
     * @param array $data
     *
     * @return boolean
     */
    public function editRow(array $data)
    {
        $result = true;

        try {
            /**
             * @var $customerRepository \Application\Repositories\Customers
             */
            $customerRepository = $this->_em->getRepository('Application\Entity\Customers');

            $customer = $customerRepository->find($data['customerId']);

            $call = new CallsEntity($customer);

            $call->setSubject($data['subject'])
                ->setContent($data['content'])
                ->setId($data['callId']);

            $this->_em->merge($call);
            $this->_em->flush();
        } catch (\Exception $exc) {
            $result = false;
        }

        return $result;
    }

    /**
     * @param array $data
     * @return bool
     */
    public function addRow(array $data)
    {
        $result = true;

        try {
            /**
             * @var $customerRepository \Application\Repositories\Customers
             */
            $customerRepository = $this->_em->getRepository('Application\Entity\Customers');

            $customer = $customerRepository->find($data['customerId']);

            $call = new CallsEntity($customer);

            $call->setSubject($data['subject'])
                ->setContent($data['content']);

            $this->_em->persist($call);
            $this->_em->flush();
        } catch (\Exception $exc) {
            $result = false;
        }

        return $result;
    }
}
